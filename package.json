{
	"name": "databricks-vscode",
	"displayName": "Databricks VSCode",
	"description": "Databricks Extension for VSCode",
	"version": "0.5.2",
	"publisher": "paiqo",
	"icon": "resources/databricks_extension.png",
	"author": {
		"name": "Gerhard Brueckl"
	},
	"license": "GPLv3",
	"homepage": "https://github.com/paiqo/Databricks-VSCode/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/paiqo/Databricks-VSCode"
	},
	"bugs": {
		"url": "https://github.com/paiqo/Databricks-VSCode/issues",
		"email": "databricks-vscode@paiqo.com"
	},
	"qna": "https://github.com/paiqo/Databricks-VSCode",
	"enableProposedApi": false,
	"engines": {
		"vscode": "^1.43.0"
	},
	"galleryBanner": {
		"color": "#0ea5ff",
		"theme": "dark"
	},
	"categories": [
		"Debuggers",
		"Azure",
		"Extension Packs",
		"Other"
	],
	"keywords": [
		"databricks",
		"spark",
		"pyspark",
		"remote",
		"cluster",
		"notebook",
		"azure",
		"AWS"
	],
	"activationEvents": [
		"onView:DatabricksConnections",
		"onView:databricksWorkspace",
		"onView:databricksClusters",
		"onView:databricksJobs",
		"onView:databricksFS",
		"onView:databricksSecrets"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": [
			{
				"name": "Databricks",
				"type": "object",
				"title": "Databricks",
				"properties": {
					"databricks.workspaceConfiguration": {
						"type": "object",
						"description": "An object containting information about settings configured for the current VSCode workspace.",
						"scope": "window",
						"properties": {
							"workspaceGuid": {
								"type": "string",
								"description": "A GUID uniquely identifying the VSCode workspace for Databricks specific configurations."
							},
							"lastActiveConnection": {
								"type": "string",
								"description": "The display name of the Connection that was active the last time the extension was used."
							},
							"whereAreMySettings": {
								"type": "string",
								"description": "Please use the VSCode user settings and search for the 'workspaceGuid' to configure the connections for this workspace.",
								"default": "Please use the VSCode user settings and search for the 'workspaceGuid' to configure the connections for this workspace."
							}
						}
					},
					"databricks.userWorkspaceConfigurations": {
						"type": "array",
						"description": "An object containting information about settings configured for the current VSCode workspace.",
						"scope": "machine",
						"items": {
							"type": "object",
							"properties": {
								"workspaceGuid": {
									"type": "string",
									"description": "A GUID uniquely identifying the VSCode workspace for Databricks specific configurations. This is used to link workspace settings to global/user settings."
								},
								"connections": {
									"type": "array",
									"description": "An array of objects where each object represents a Databricks Connection containing the same settings as defined for databricks.connection.default.* ",
									"items": {
										"type": "object",
										"properties": {
											"exportFormats": {
												"type": "object",
												"default": {
													"Scala": ".scala",
													"Python": ".ipynb",
													"SQL": ".sql",
													"R": ".r"
												},
												"description": "(Optional) The different file extension used when downloading notebooks from Databricks.",
												"scope": "window",
												"properties": {
													"Scala": {
														"type": "string",
														"enum": [
															".scala"
														],
														"description": "The file extension used when downloading Scala notebooks from Databricks."
													},
													"Python": {
														"type": "string",
														"enum": [
															".py",
															".ipynb"
														],
														"description": "The file extension used when downloading Python notebooks from Databricks."
													},
													"SQL": {
														"type": "string",
														"enum": [
															".sql"
														],
														"description": "The file extension used when downloading SQL notebooks from Databricks."
													},
													"R": {
														"type": "string",
														"enum": [
															".r",
															".Rmd"
														],
														"description": "The file extension used when downloading R notebooks from Databricks."
													}
												}
											},
											"displayName": {
												"type": "string",
												"description": "Name shown in the Connection list of the Databricks VSCode extension."
											},
											"apiRootUrl": {
												"type": "string",
												"default": "https://westeurope.azuredatabricks.net",
												"description": "Root URL of the Databricks API. Azure: https://westeurope.azuredatabricks.net - AWS:   https://abc-12345-xaz.cloud.databricks.com"
											},
											"cloudProvider": {
												"type": "string",
												"enum": [
													"Azure",
													"AWS"
												],
												"description": "Cloud provider of your Databricks workspace."
											},
											"personalAccessToken": {
												"type": "string",
												"description": "The Personal Access Token (PAT) used to access the Databricks API."
											},
											"localSyncFolder": {
												"type": "string",
												"description": "A local path where files (notebooks) that are downloaded from Databricks should be stored. This folder can then be integrated in your GIT repository"
											},
											"pythonInterpreter": {
												"type": "string",
												"description": "Path to python.exe of the interpreter to use. Is displayed when setting the Python interpretor in VS Code"
											},
											"organizationId": {
												"type": "string",
												"description": "Azure only! The organization ID of the Databricks workspace. Can be found in the URL when connected in the browser."
											},
											"databricksConnectJars": {
												"type": "string",
												"description": "Path to the Databricks-Connect Pyspark JARs. Can be obtained using 'databricks-connect get-jar-dir'."
											},
											"port": {
												"type": "number",
												"default": 15001,
												"description": "The port to use when connecting using Databricks-Connect. Default is 15001."
											},
											"useCodeCells": {
												"type": "boolean",
												"default": false,
												"description": "If true, Code Cell tags (# %%) will be added when downloading raw source files."
											}
										}
									}
								}
							}
						}
					},
					"databricks.connection.default.exportFormats": {
						"type": "object",
						"default": {
							"Scala": ".scala",
							"Python": ".ipynb",
							"SQL": ".sql",
							"R": ".r"
						},
						"description": "(Optional) The different file extension used when downloading notebooks from Databricks.",
						"scope": "window",
						"properties": {
							"Scala": {
								"type": "string",
								"enum": [
									".scala"
								],
								"description": "The file extension used when downloading Scala notebooks from Databricks."
							},
							"Python": {
								"type": "string",
								"enum": [
									".py",
									".ipynb"
								],
								"description": "The file extension used when downloading Python notebooks from Databricks."
							},
							"SQL": {
								"type": "string",
								"enum": [
									".sql"
								],
								"description": "The file extension used when downloading SQL notebooks from Databricks."
							},
							"R": {
								"type": "string",
								"enum": [
									".r",
									".Rmd"
								],
								"description": "The file extension used when downloading R notebooks from Databricks."
							}
						}
					},
					"databricks.connection.default.displayName": {
						"type": "string",
						"description": "(Mandatory) Name shown in the Connection list of the Databricks VSCode extension.",
						"scope": "window"
					},
					"databricks.connection.default.apiRootUrl": {
						"type": "string",
						"description": "(Mandatory) Root URL of the Databricks API. Azure: https://westeurope.azuredatabricks.net - AWS:   https://abc-12345-xaz.cloud.databricks.com",
						"scope": "window",
						"examples": [
							"https://westeurope.azuredatabricks.net",
							"https://abc-12345-xaz.cloud.databricks.com"
						],
						"format": "hostname"
					},
					"databricks.connection.default.cloudProvider": {
						"type": "string",
						"enum": [
							"Azure",
							"AWS"
						],
						"description": "(Optional) Cloud provider of your Databricks workspace.",
						"scope": "window"
					},
					"databricks.connection.default.personalAccessToken": {
						"type": "string",
						"description": "(Mandatory) The Personal Access Token (PAT) used to access the Databricks API.",
						"scope": "window",
						"examples": [
							"dapi0123456789abcdef0123456789abcdef"
						]
					},
					"databricks.connection.default.localSyncFolder": {
						"type": "string",
						"description": "(Mandatory) A local path where files (notebooks) that are downloaded from Databricks should be stored. This folder can then be integrated in your GIT repository. \nExamples: \nWindows - C:\\mySyncFolder \nLinux/Unix - /home/myUser/mySyncFolder \nmacOS - myUser/mySyncFolder  (Please do not use leading / on macOS!)",
						"scope": "window",
						"examples": [
							"Windows: C:\\mySyncFolder",
							"Linux/Unix: /home/myUser/mySyncFolder",
							"macOS: myUser/mySyncFolder  (Please do not use leading / on macOS!)"
						],
						"format": "uri"
					},
					"databricks.connection.default.pythonInterpreter": {
						"type": "string",
						"description": "(Optional, for Databricks-Connect) Path to python.exe of the interpreter to use. Is displayed when setting the Python interpretor in VS Code",
						"scope": "window",
						"format": "uri"
					},
					"databricks.connection.default.organizationId": {
						"type": "string",
						"description": "(Optional, for Databricks-Connect, Azure only) The organization ID of the Databricks workspace. Can be found in the URL when connected in the browser.",
						"scope": "window",
						"examples": [
							"1234567890123456"
						]
					},
					"databricks.connection.default.databricksConnectJars": {
						"type": "string",
						"description": "(Optional, for Databricks-Connect) Path to the Databricks-Connect Pyspark JARs. Can be obtained using 'databricks-connect get-jar-dir'.",
						"scope": "window",
						"format": "uri"
					},
					"databricks.connection.default.port": {
						"type": "number",
						"description": "(Optional, for Databricks-Connect) The port to use when connecting using Databricks-Connect. Default is 15001.",
						"scope": "window"
					},
					"databricks.connection.default.useCodeCells": {
						"type": "boolean",
						"description": "If true, Code Cell tags (# %%) will be added when downloading raw source files.",
						"scope": "window"
					},
					"databricks.connections": {
						"type": "array",
						"description": "An array of objects where each object represents a Databricks Connection containing the same settings as defined for databricks.connection.default.* ",
						"items": {
							"type": "object",
							"properties": {
								"exportFormats": {
									"type": "object",
									"default": {
										"Scala": ".scala",
										"Python": ".ipynb",
										"SQL": ".sql",
										"R": ".r"
									},
									"description": "(Optional) The different file extension used when downloading notebooks from Databricks.",
									"scope": "window",
									"properties": {
										"Scala": {
											"type": "string",
											"enum": [
												".scala"
											],
											"description": "The file extension used when downloading Scala notebooks from Databricks."
										},
										"Python": {
											"type": "string",
											"enum": [
												".py",
												".ipynb"
											],
											"description": "The file extension used when downloading Python notebooks from Databricks."
										},
										"SQL": {
											"type": "string",
											"enum": [
												".sql"
											],
											"description": "The file extension used when downloading SQL notebooks from Databricks."
										},
										"R": {
											"type": "string",
											"enum": [
												".r",
												".Rmd"
											],
											"description": "The file extension used when downloading R notebooks from Databricks."
										}
									}
								},
								"displayName": {
									"type": "string",
									"default": "my Databricks workspace",
									"description": "Name shown in the Connection list of the Databricks VSCode extension.",
									"scope": "window"
								},
								"apiRootUrl": {
									"type": "string",
									"default": "https://westeurope.azuredatabricks.net",
									"description": "Root URL of the Databricks API. Azure: https://westeurope.azuredatabricks.net - AWS:   https://abc-12345-xaz.cloud.databricks.com",
									"scope": "window"
								},
								"cloudProvider": {
									"type": "string",
									"enum": [
										"Azure",
										"AWS"
									],
									"description": "Cloud provider of your Databricks workspace.",
									"scope": "window"
								},
								"personalAccessToken": {
									"type": "string",
									"default": "dapi123456789abcdef123456789abcdef",
									"description": "The Personal Access Token (PAT) used to access the Databricks API.",
									"scope": "window"
								},
								"localSyncFolder": {
									"type": "string",
									"default": "C:\\Databricks_sync",
									"description": "A local path where files (notebooks) that are downloaded from Databricks should be stored. This folder can then be integrated in your GIT repository",
									"scope": "window"
								},
								"pythonInterpreter": {
									"type": "string",
									"default": "C:\\Anaconda3\\envs\\databricksconnect\\python.exe",
									"description": "Path to python.exe of the interpreter to use. Is displayed when setting the Python interpretor in VS Code",
									"scope": "window"
								},
								"organizationId": {
									"type": "string",
									"default": "1234567890392586",
									"description": "Azure only! The organization ID of the Databricks workspace. Can be found in the URL when connected in the browser.",
									"scope": "window"
								},
								"databricksConnectJars": {
									"type": "string",
									"default": "C:\\anaconda3\\envs\\databricksconnect\\lib\\site-packages\\pyspark\\jars",
									"description": "Path to the Databricks-Connect Pyspark JARs. Can be obtained using 'databricks-connect get-jar-dir'.",
									"scope": "window"
								},
								"port": {
									"type": "number",
									"default": 15001,
									"description": "The port to use when connecting using Databricks-Connect. Default is 15001.",
									"scope": "window"
								},
								"useCodeCells": {
									"type": "boolean",
									"default": false,
									"description": "If true, Code Cell tags (# %%) will be added when downloading raw source files.",
									"scope": "window"
								}
							}
						},
						"scope": "window"
					}
				}
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "databricks",
					"title": "Databricks",
					"icon": "resources/databricks_sidebar.png"
				}
			]
		},
		"views": {
			"databricks": [
				{
					"id": "DatabricksConnections",
					"name": "Connections"
				},
				{
					"id": "databricksWorkspace",
					"name": "Workspace"
				},
				{
					"id": "databricksClusters",
					"name": "Clusters"
				},
				{
					"id": "databricksJobs",
					"name": "Jobs"
				},
				{
					"id": "databricksFS",
					"name": "DBFS"
				},
				{
					"id": "databricksSecrets",
					"name": "Secrets"
				}
			]
		},
		"commands": [
			{
				"command": "DatabricksConnections.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.png",
					"dark": "resources/dark/refresh.png"
				}
			},
			{
				"command": "DatabricksConnections.add",
				"title": "Add",
				"icon": {
					"light": "resources/light/add.png",
					"dark": "resources/dark/add.png"
				}
			},
			{
				"command": "DatabricksConnectionItem.activate",
				"title": "Activate",
				"icon": {
					"light": "resources/light/connected.png",
					"dark": "resources/dark/connected.png"
				}
			},
			{
				"command": "databricksWorkspace.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.png",
					"dark": "resources/dark/refresh.png"
				}
			},
			{
				"command": "databricksWorkspace.download",
				"title": "Download",
				"icon": {
					"light": "resources/light/download.png",
					"dark": "resources/dark/download.png"
				}
			},
			{
				"command": "databricksWorkspace.sync",
				"title": "Sync",
				"icon": {
					"light": "resources/light/sync.png",
					"dark": "resources/dark/sync.png"
				}
			},
			{
				"command": "databricksWorkspace.upload",
				"title": "Upload",
				"icon": {
					"light": "resources/light/upload.png",
					"dark": "resources/dark/upload.png"
				}
			},
			{
				"command": "databricksWorkspaceItem.click",
				"title": "Open File"
			},
			{
				"command": "databricksWorkspaceItem.download",
				"title": "Download",
				"icon": {
					"light": "resources/light/download.png",
					"dark": "resources/dark/download.png"
				}
			},
			{
				"command": "databricksWorkspaceItem.upload",
				"title": "Upload",
				"icon": {
					"light": "resources/light/upload.png",
					"dark": "resources/dark/upload.png"
				}
			},
			{
				"command": "databricksWorkspaceItem.compare",
				"title": "Compare",
				"icon": {
					"light": "resources/light/compare.png",
					"dark": "resources/dark/compare.png"
				}
			},
			{
				"command": "databricksWorkspaceItem.sync",
				"title": "Sync",
				"icon": {
					"light": "resources/light/sync.png",
					"dark": "resources/dark/sync.png"
				}
			},
			{
				"command": "databricksWorkspaceItem.delete",
				"title": "Delete",
				"icon": {
					"light": "resources/light/delete.png",
					"dark": "resources/dark/delete.png"
				}
			},
			{
				"command": "databricksClusters.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.png",
					"dark": "resources/dark/refresh.png"
				}
			},
			{
				"command": "databricksClusters.add",
				"title": "Add",
				"icon": {
					"light": "resources/light/add.png",
					"dark": "resources/dark/add.png"
				}
			},
			{
				"command": "databricksClusterItem.click",
				"title": "Open File"
			},
			{
				"command": "databricksClusterItem.start",
				"title": "Start",
				"icon": {
					"light": "resources/light/start.png",
					"dark": "resources/dark/start.png"
				}
			},
			{
				"command": "databricksClusterItem.stop",
				"title": "Stop",
				"icon": {
					"light": "resources/light/stop.png",
					"dark": "resources/dark/stop.png"
				}
			},
			{
				"command": "databricksClusterItem.showDefinition",
				"title": "JSON Definition",
				"icon": {
					"light": "resources/light/json.png",
					"dark": "resources/dark/json.png"
				}
			},
			{
				"command": "databricksClusterItem.delete",
				"title": "Delete",
				"icon": {
					"light": "resources/light/delete.png",
					"dark": "resources/dark/delete.png"
				}
			},
			{
				"command": "databricksJobs.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.png",
					"dark": "resources/dark/refresh.png"
				}
			},
			{
				"command": "databricksJobs.add",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/add.png",
					"dark": "resources/dark/add.png"
				}
			},
			{
				"command": "databricksJobItem.showDefinition",
				"title": "JSON Definition",
				"icon": {
					"light": "resources/light/json.png",
					"dark": "resources/dark/json.png"
				}
			},
			{
				"command": "databricksJobItem.click",
				"title": "Open File"
			},
			{
				"command": "databricksJobItem.start",
				"title": "Start",
				"icon": {
					"light": "resources/light/start.png",
					"dark": "resources/dark/start.png"
				}
			},
			{
				"command": "databricksJobItem.stop",
				"title": "Stop",
				"icon": {
					"light": "resources/light/stop.png",
					"dark": "resources/dark/stop.png"
				}
			},
			{
				"command": "databricksJobItem.delete",
				"title": "Delete",
				"icon": {
					"light": "resources/light/delete.png",
					"dark": "resources/dark/delete.png"
				}
			},
			{
				"command": "databricksJobItem.openBrowser",
				"title": "Open Browser",
				"icon": {
					"light": "resources/light/openBrowser.png",
					"dark": "resources/dark/openBrowser.png"
				}
			},
			{
				"command": "databricksFS.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.png",
					"dark": "resources/dark/refresh.png"
				}
			},
			{
				"command": "databricksFS.add",
				"title": "Add",
				"icon": {
					"light": "resources/light/add.png",
					"dark": "resources/dark/add.png"
				}
			},
			{
				"command": "databricksFSItem.download",
				"title": "download",
				"icon": {
					"light": "resources/light/download.png",
					"dark": "resources/dark/download.png"
				}
			},
			{
				"command": "databricksFSItem.click",
				"title": "Preview File"
			},
			{
				"command": "databricksFSItem.add",
				"title": "Add",
				"icon": {
					"light": "resources/light/add.png",
					"dark": "resources/dark/add.png"
				}
			},
			{
				"command": "databricksFSItem.delete",
				"title": "Delete",
				"icon": {
					"light": "resources/light/delete.png",
					"dark": "resources/dark/delete.png"
				}
			},
			{
				"command": "databricksSecrets.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.png",
					"dark": "resources/dark/refresh.png"
				}
			},
			{
				"command": "databricksSecrets.addSecretScope",
				"title": "Add",
				"icon": {
					"light": "resources/light/add.png",
					"dark": "resources/dark/add.png"
				}
			},
			{
				"command": "databricksSecretItem.deleteSecretScope",
				"title": "Delete",
				"icon": {
					"light": "resources/light/delete.png",
					"dark": "resources/dark/delete.png"
				}
			},
			{
				"command": "databricksSecretItem.addSecret",
				"title": "Add",
				"icon": {
					"light": "resources/light/add.png",
					"dark": "resources/dark/add.png"
				}
			},
			{
				"command": "databricksSecretItem.deleteSecret",
				"title": "Delete",
				"icon": {
					"light": "resources/light/delete.png",
					"dark": "resources/dark/delete.png"
				}
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "DatabricksConnections.refresh",
					"when": "view == DatabricksConnections",
					"group": "navigation"
				},
				{
					"command": "DatabricksConnections.add",
					"when": "view == DatabricksConnections",
					"group": "navigation"
				},
				{
					"command": "databricksWorkspace.refresh",
					"when": "view == databricksWorkspace",
					"group": "navigation@2"
				},
				{
					"command": "databricksWorkspace.download",
					"when": "view == databricksWorkspace",
					"group": "navigation@1"
				},
				{
					"command": "databricksWorkspace.upload",
					"when": "view == databricksWorkspace",
					"group": "navigation@1"
				},
				{
					"command": "databricksClusters.refresh",
					"when": "view == databricksClusters",
					"group": "navigation"
				},
				{
					"command": "databricksClusters.add",
					"when": "view == databricksClusters",
					"group": "navigation"
				},
				{
					"command": "databricksJobs.refresh",
					"when": "view == databricksJobs",
					"group": "navigation"
				},
				{
					"command": "databricksJobs.add",
					"when": "view == databricksJobs",
					"group": "navigation"
				},
				{
					"command": "databricksFS.refresh",
					"when": "view == databricksFS",
					"group": "navigation"
				},
				{
					"command": "databricksFS.add",
					"when": "view == databricksFS",
					"group": "navigation"
				},
				{
					"command": "databricksSecrets.refresh",
					"when": "view == databricksSecrets",
					"group": "navigation"
				},
				{
					"command": "databricksSecrets.addSecretScope",
					"when": "view == databricksSecrets",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "DatabricksConnectionItem.activate",
					"when": "view == DatabricksConnections && viewItem == INACTIVE",
					"group": "inline"
				},
				{
					"command": "databricksWorkspaceItem.download",
					"when": "view == databricksWorkspace && viewItem == CAN_SYNC || viewItem == CAN_DOWNLOAD",
					"group": "inline@1"
				},
				{
					"command": "databricksWorkspaceItem.upload",
					"when": "view == databricksWorkspace && viewItem == CAN_SYNC || viewItem == CAN_UPLOAD",
					"group": "inline@1"
				},
				{
					"command": "databricksWorkspaceItem.compare",
					"when": "view == databricksWorkspace && viewItem == CAN_SYNC",
					"group": "inline@1"
				},
				{
					"command": "databricksWorkspaceItem.delete",
					"when": "view == databricksWorkspace",
					"group": "inline@2"
				},
				{
					"command": "databricksClusterItem.start",
					"when": "view == databricksClusters && viewItem == CAN_START",
					"group": "inline"
				},
				{
					"command": "databricksClusterItem.stop",
					"when": "view == databricksClusters && viewItem == CAN_STOP",
					"group": "inline"
				},
				{
					"command": "databricksClusterItem.showDefinition",
					"when": "view == databricksClusters",
					"group": "inline"
				},
				{
					"command": "databricksClusterItem.delete",
					"when": "view == databricksClusters",
					"group": "inline"
				},
				{
					"command": "databricksJobItem.showDefinition",
					"when": "view == databricksJobs",
					"group": "inline"
				},
				{
					"command": "databricksJobItem.start",
					"when": "view == databricksJobs  && viewItem == JOB",
					"group": "inline"
				},
				{
					"command": "databricksJobItem.stop",
					"when": "view == databricksJobs  && viewItem == RUNNING_JOB",
					"group": "inline"
				},
				{
					"command": "databricksJobItem.openBrowser",
					"when": "view == databricksJobs",
					"group": "inline"
				},
				{
					"command": "databricksJobItem.delete",
					"when": "view == databricksJobs && viewItem == JOB",
					"group": "inline"
				},
				{
					"command": "databricksFSItem.add",
					"when": "view == databricksFS && viewItem == FOLDER",
					"group": "inline"
				},
				{
					"command": "databricksFSItem.download",
					"when": "view == databricksFS && viewItem == FILE",
					"group": "inline"
				},
				{
					"command": "databricksFSItem.delete",
					"when": "view == databricksFS && viewItem == FILE",
					"group": "inline"
				},
				{
					"command": "databricksSecretItem.addSecret",
					"when": "view == databricksSecrets && viewItem == SCOPE",
					"group": "inline"
				},
				{
					"command": "databricksSecretItem.deleteSecretScope",
					"when": "view == databricksSecrets && viewItem == SCOPE",
					"group": "inline"
				},
				{
					"command": "databricksSecretItem.deleteSecret",
					"when": "view == databricksSecrets && viewItem == SECRET",
					"group": "inline"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./"
	},
	"devDependencies": {
		"@types/mkdirp": "^0.5.2",
		"@types/node": "^10.17.17",
		"@types/rimraf": "^2.0.3",
		"@types/vscode": "^1.43.0",
		"tslint": "^5.20.1",
		"typescript": "^3.8.3"
	},
	"dependencies": {
		"@angular/common": "^8.2.14",
		"@angular/core": "^8.2.14",
		"angular": "^1.8.0",
		"axios": "^0.19.1",
		"file-saver": "^2.0.2",
		"ftp": "^0.3.10",
		"jsonc-parser": "^0.4.2",
		"keytar": "^5.4.0",
		"minimist": "^1.2.5",
		"mkdirp": "^0.5.1",
		"promise.prototype.finally": "^3.1.2",
		"replace-in-file": "^6.0.0",
		"request": "^2.88.2",
		"rimraf": "^2.6.2",
		"rxjs": "^6.5.3",
		"sync-request": "^6.1.0",
		"typed-rest-client": "^1.7.2",
		"uniquefilename": "^1.1.2"
	}
}